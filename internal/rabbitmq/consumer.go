package rabbitmq

import (
	"log"

	"github.com/streadway/amqp"
)

func StartConsumer() {
	conn, err := amqp.Dial("amqp://guest:guest@rabbitmq:5672/")
	if err != nil {
		log.Fatalf("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RabbitMQ: %v", err)
	}
	defer conn.Close()

	ch, err := conn.Channel()
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–∞–Ω–∞–ª–∞: %v", err)
	}
	defer ch.Close()

	q, err := ch.QueueDeclare(
		"messages_queue", // –æ—á–µ—Ä–µ–¥—å —Ç–∞ –∂–µ, —á—Ç–æ –∏ —É –ø—Ä–æ–¥—é—Å–µ—Ä–∞
		true,
		false,
		false,
		false,
		nil,
	)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏: %v", err)
	}

	msgs, err := ch.Consume(
		q.Name,
		"",
		true,  // –∞–≤—Ç–æ-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
		false, // –Ω–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π
		false,
		false,
		nil,
	)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Å—å—é–º–µ—Ä–∞: %v", err)
	}

	log.Println("üì• –ö–æ–Ω—Å—å—é–º–µ—Ä –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")

	go func() {
		for d := range msgs {
			log.Printf("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: %s", d.Body)
		}
	}()
}